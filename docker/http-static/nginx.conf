user root;

worker_processes 1;

pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile on;
    #tcp_nopush     on;

    keepalive_timeout 65;

    gzip on;

    server {
        listen 8080;
        listen [::]:8080;

        server_name _;

        root /usr/share/nginx/html;

        index index.html index.php /_h5ai/public/index.php;

        location = /_h5ai/public/index.php {
            # regex to split $uri to $fastcgi_script_name and $fastcgi_path
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            # Check that the PHP script exists before passing it
            try_files $fastcgi_script_name =404;

            # Bypass the fact that try_files resets $fastcgi_path_info
            # see: http://trac.nginx.org/nginx/ticket/321
            set $path_info $fastcgi_path_info;
            fastcgi_param PATH_INFO $path_info;

            fastcgi_index index.php;
            # include fastcgi.conf;

            fastcgi_pass unix:/run/php/php7.3-fpm.sock;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
        }

        location ~ ^/_h5ai/private {
            return 403;
        }

        location ~ ^/_h5ai {
            root /usr/share/nginx/html;
        }

        location / {
            root /usr/share/nginx/html/data;
            try_files $uri $uri/ =404;
        }
    }

}
